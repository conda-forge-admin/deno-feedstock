{% set version = "1.24.2" %}

package:
  name: deno
  version: {{ version }}

source:
  - url: https://github.com/denoland/deno/releases/download/v{{ version }}/deno_src.tar.gz
    sha256: 3135c9fd8f9635f0dffcd22c5eae02222a5c1b549789af01fda683909687b8cb

build:
  number: 2
  missing_dso_whitelist:
    # As mentioned below, we fall back to the system compilers on MacOS, because the conda-forge
    # clang compilers do not provide Metal support. This Metal framework might be good to add to
    # conda-build's default list of missing_dso_whitelist
    - /System/Library/Frameworks/Metal.framework/Versions/A/Metal  # [osx]

requirements:
  build:
    # TODO: might need to use XCode compilers on MacOS because we need Metal
    #    Not sure if we need to NOT use a compiler() spec for that, and if
    #    we don't do that, then not sure how cross compilation for ARM will work.
    - {{ compiler("rust") }}   # [not osx]
    - {{ compiler("c") }}      # [osx]
    - cargo-bundle-licenses
    - make   # [unix]
    - rust   # [osx]

test:
  commands:
    - deno --help
    - deno run https://deno.land/std/examples/welcome.ts
    - if [ "$DENO_INSTALL_ROOT" != "$PREFIX" ]; then echo "DENO_INTALL_ROOT var not set correctly" && exit 1; fi    # [linux]
    - IF "%DENO_INSTALL_ROOT:/=\%" NEQ "%PREFIX:/=\%\Library" exit 1    # [win]

about:
  home: https://deno.land
  license: MIT
  license_family: MIT
  license_file:
    - LICENSE.md
    - DENO_THIRDPARTY_LICENSES.yml
  summary: A simple, modern and secure runtime for JavaScript and TypeScript that uses V8 and is built in Rust
  doc_url: https://deno.land/manual
  dev_url: https://github.com/denoland/deno

extra:
  recipe-maintainers:
    - msarahan
